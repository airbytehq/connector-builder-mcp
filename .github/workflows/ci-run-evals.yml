name: CI Run Evals

on:
  push:
    branches:
      - main
    paths:
      - "connector_builder_mcp/**"
      - "connector_builder_agents/**"
      - "tests/**"
      - "uv.lock"
      - "pyproject.toml"
  pull_request:
    types:
      - ready_for_review
      - reopened
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-evals:
    name: Run Evals (Single Connector)
    if: |
      github.event_name == 'push' ||
      github.event.action == 'ready_for_review' ||
      github.event.action == 'reopened' ||
      github.event.action == 'synchronize'
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      
      - name: Check latest commit message for keywords
        id: check-commits
        if: github.event_name == 'pull_request' && github.event.action == 'synchronize'
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          
          if echo "$COMMIT_MSG" | grep -qiE '\[llm\]|\[agent\]|\[eval\]'; then
            echo "found=true" >> $GITHUB_OUTPUT
            echo "Keywords found in latest commit message - will run evals"
          else
            echo "found=false" >> $GITHUB_OUTPUT
            echo "No keywords found in latest commit message - will skip evals"
          fi
      
      - name: Set up uv
        if: |
          github.event.action != 'synchronize' ||
          steps.check-commits.outputs.found == 'true'
        uses: astral-sh/setup-uv@v6.6.1
      - name: Set up Python
        if: |
          github.event.action != 'synchronize' ||
          steps.check-commits.outputs.found == 'true'
        uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install dependencies
        if: |
          github.event.action != 'synchronize' ||
          steps.check-commits.outputs.found == 'true'
        run: uv sync --all-extras
      - name: Run Evals
        if: |
          github.event.action != 'synchronize' ||
          steps.check-commits.outputs.found == 'true'
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_AGENTS_LOG: info
          HTTPX_LOG_LEVEL: warning
          PHOENIX_API_KEY: ${{ secrets.AIRBYTE_CI_TESTING_PHOENIX_API_KEY }}
          PHOENIX_COLLECTOR_ENDPOINT: ${{ vars.AIRBYTE_CI_TESTING_PHOENIX_COLLECTOR_ENDPOINT }}
        run: uv run poe evals run --connector source-jsonplaceholder
